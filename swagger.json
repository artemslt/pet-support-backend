{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.3",
    "title": "Pet Support App",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://pet-support-backend-v8vc.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Notices",
      "description": "Pets endpoints"
    },
    {
      "name": "News",
      "description": "User endpoints"
    },
    {
      "name": "Friends",
      "description": "User endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [{ "in": "path", "name": "_id" }],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Current User",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/users/edit": {
      "patch": {
        "tags": ["User"],
        "summary": "Edit current user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditeUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/users/avatar": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user's avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "tags": ["User"],
        "summary": "Current full user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/users/addpet": {
      "post": {
        "tags": ["User"],
        "summary": "Add user's pet",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/users/{petId}": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete pet by id",
        "parameters": [{ "in": "path", "name": "petId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/news": {
      "get": {
        "tags": ["News"],
        "summary": "News",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/friends": {
      "get": {
        "tags": ["Friends"],
        "summary": "Friends",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/notices/notices/{category}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Notices by category",
        "parameters": [{ "in": "path", "name": "category" }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesListschema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/notices/notice/{noticeId}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notices by id",
        "parameters": [{ "in": "path", "name": "noticeId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete notices by id",
        "parameters": [{ "in": "path", "name": "noticeId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/notices": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get user's notices",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesListschema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/notices/favorite": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get user's favorite notices",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesListschema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/notices/favorite/{noticeId}": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add notices to favorite",
        "parameters": [{ "in": "path", "name": "noticeId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Remove notice from favorite",
        "parameters": [{ "in": "path", "name": "noticeId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/notices/notice": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add new notice",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Notice object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NewNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/notices/{search}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Search notices",
        "parameters": [{ "in": "path", "name": "search" }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesListschema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password", "location", "phone"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "location": {
            "type": "string",
            "description": "User's location",
            "example": "Kiyv, Ukraine"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380000000000"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "63f14239b405b98cd800d117"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User's Name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        },
        "example": {
          "status": "success",
          "code": 201,
          "data": {
            "_id": "63f695b9a370114fcc63202a",
            "name": "Name",
            "email": "user123@example.com"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "location": {
                "type": "string",
                "description": "User's location",
                "example": "Kiyv, Ukraine"
              },
              "phone": {
                "type": "string",
                "description": "User's phone",
                "example": "+380000000000"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZjExN2RhZmI4ZWYxNjA4ZTkyZTk1NiIsImlhdCI6MTY3NzA4NzQ2NX0.ENQFhnaU_5D-iuOb0GitwboXROV-8cXo4Ko0mdyZRk"
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "user": {
              "name": "Name",
              "email": "user123@example.com",
              "location": "Kiyv, Ukraine",
              "phone": "+380000000000"
            },
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZjY5NWI5YTM3MDExNGZjYzYzMjAyYSIsImlhdCI6MTY3NzEwNDcyNH0.gFE_A-RS47dgyBSWpU_QrnLKPw2ToZ4DBFmUYZi6gfw"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "location": {
            "type": "string",
            "description": "User's location",
            "example": "Kiyv, Ukraine"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380000000000"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "00.00.0000"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's birthday",
            "example": "Same url"
          },
          "pets": {
            "type": "array",
            "description": "User's birthday",
            "example": "Same url"
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "name": "Name",
            "email": "user123@example.com",
            "location": "Kiyv, Ukraine",
            "phone": "+380000000000",
            "birthday": "00.00.0000",
            "avatarURL": null,
            "pets": []
          }
        }
      },
      "CurrentUserAvatarRequest": {
        "type": "object",
        "required": ["avatar"],
        "properties": {
          "avatar": {
            "type": "string",
            "description": "User avatar",
            "format": "binary"
          }
        }
      },
      "EditeUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "location": {
            "type": "string",
            "description": "User's location",
            "example": "Kiyv, Ukraine"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380000000000"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "00.00.0000"
          }
        },
        "example": {
          "name": "Name",
          "email": "user123@example.com",
          "location": "Kiyv, Ukraine",
          "phone": "+380000000000",
          "birthday": "00.00.0000"
        }
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["_id"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "63f0a479972715d34654fdfa"
          }
        }
      },
      "NewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Friend's id",
              "example": "63f14239b405b98cd800d117"
            },
            "title": {
              "type": "string",
              "description": "User's id",
              "example": "Same Text"
            },
            "url": {
              "type": "string",
              "description": "User's id",
              "example": "Same url"
            },
            "description": {
              "type": "string",
              "description": "User's id",
              "example": "Same text"
            },
            "date": {
              "type": "string",
              "description": "User's id",
              "format": "date"
            }
          }
        }
      },
      "FriendsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Friend's id",
              "example": "63f14239b405b98cd800d117"
            },
            "title": {
              "type": "string",
              "description": "Friend's title",
              "example": "Same Text"
            },
            "url": {
              "type": "string",
              "description": "Friend's url",
              "example": "Same url"
            },
            "addressUrl": {
              "type": "string",
              "description": "Friend's addressUrl",
              "example": "Same url"
            },
            "imageUrl": {
              "type": "string",
              "description": "Friend's imageUrl",
              "example": "Same url"
            },
            "address": {
              "type": "string",
              "description": "Friend's address",
              "example": "Same address"
            },
            "workdays": {
              "type": "array",
              "description": "Friend's workdays",
              "items": {
                "type": "object",
                "properties": {
                  "isOpen": {
                    "type": "boolean",
                    "format": "boolean"
                  },
                  "from": {
                    "type": "string",
                    "example": "09:00"
                  },
                  "to": {
                    "type": "string",
                    "example": "17:00"
                  }
                }
              }
            },
            "email": {
              "type": "string",
              "description": "Friend's email",
              "format": "email"
            },
            "phone": {
              "type": "string",
              "description": "Friend's phone",
              "example": "Same phone"
            }
          }
        }
      },
      "AddPetRequest": {
        "type": "object",
        "required": ["name", "birthday", "breed"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Amaly"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "27.06.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Dog"
          },
          "photo": {
            "type": "string",
            "description": "Pet's photo",
            "format": "binary"
          },
          "comment": {
            "type": "string",
            "description": "Pet name's",
            "example": "She is good"
          }
        }
      },
      "AddPetResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Amaly"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "19.06.2022"
            },
            "breed": {
              "type": "string",
              "description": "Pet's breed",
              "example": "Same url"
            },
            "photo": {
              "type": "string",
              "description": "Pet's photo",
              "example": "http://res.cloudinary.com/dtk7nhyzp/image/upload/h_150,w_100/nils%20cat.png"
            },
            "comment": {
              "type": "string",
              "description": "User's commet",
              "example": "good cat"
            },
            "owner": {
              "type": "string",
              "description": "Owmer's id",
              "example": "63f695b9a370114fcc63202a"
            },
            "_id": {
              "type": "string",
              "description": "Pet's id",
              "example": "63f72058bbba3338d0016353"
            }
          },
          "example": {
            "status": "success",
            "code": 201,
            "data": {
              "result": {
                "name": "Nil",
                "birthday": "19.06.2022",
                "breed": "britanian",
                "photo": "http://res.cloudinary.com/dtk7nhyzp/image/upload/h_150,w_100/nils%20cat.png",
                "comment": "good cat",
                "owner": "63f695b9a370114fcc63202a",
                "_id": "63f72058bbba3338d0016353"
              }
            }
          }
        }
      },
      "NoticesListschema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Pet's id",
              "example": "63f72058bbba3338d0016353"
            },
            "category": {
              "type": "string",
              "description": "Pet's category can be sell, lost-found, for-free",
              "example": "sell"
            },
            "title": {
              "type": "string",
              "description": "Notices title",
              "example": "Продаю кошеня"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Amaly"
            },
            "date": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "27.06.2020"
            },
            "breed": {
              "type": "string",
              "description": "Pet's breed",
              "example": "britanian"
            },
            "sex": {
              "type": "string",
              "description": "Pet's sex male female",
              "example": "male"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Київ, Україна"
            },
            "price": {
              "type": "integer",
              "description": "Pet's price",
              "example": "500"
            },
            "image": {
              "type": "string",
              "description": "Pet's photo",
              "example": "http://res.cloudinary.com/dtk7nhyzp/image/upload/h_150,w_100/nils%20cat.png"
            },
            "comments": {
              "type": "string",
              "description": "User's commet",
              "example": "good cat"
            },
            "owner": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "User's id",
                  "example": "63f3306945cc47c53a8fd33d"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                },
                "name": {
                  "type": "string",
                  "description": "User's name",
                  "example": "Valeriia"
                }
              }
            },
            "createdAt": {
              "type": "string",
              "description": "Date of creation notice",
              "format": "dateTime"
            },
            "updatedAt": {
              "type": "string",
              "description": "Date of update notice",
              "format": "dateTime"
            }
          }
        },
        "example": {
          "status": "success",
          "code": 201,
          "data": {
            "result": [
              {
                "_id": "63f330d345cc47c53a8fd34e",
                "category": "sell",
                "title": "Продаю кошеня",
                "name": "Димок",
                "breed": "Британський короткошерсний",
                "sex": "male",
                "location": "Київ, Україна",
                "price": 500,
                "image": "http://res.cloudinary.com/dtk7nhyzp/image/upload/v1676882130/muktgrmyiudgodkxzvgt.jpg",
                "comments": "Продаю кошеня породи британський короткошерсний. Дуже добрий та лагідний.",
                "owner": {
                  "_id": "63f3306945cc47c53a8fd33d",
                  "email": "valeriia@gmail.com",
                  "name": "Valeriia"
                },
                "createdAt": "2023-02-20T08:35:31.834Z",
                "updatedAt": "2023-02-20T08:35:31.834Z"
              },
              {
                "_id": "63f330d345cc47c53a8fd34e",
                "category": "sell",
                "title": "Продаю кошеня",
                "name": "Димок",
                "date": "15.06.2020",
                "breed": "Британський короткошерсний",
                "sex": "male",
                "location": "Київ, Україна",
                "price": 500,
                "image": "http://res.cloudinary.com/dtk7nhyzp/image/upload/v1676882130/muktgrmyiudgodkxzvgt.jpg",
                "comments": "Продаю кошеня породи британський короткошерсний. Дуже добрий та лагідний.",
                "owner": {
                  "_id": "63f3306945cc47c53a8fd33d",
                  "email": "valeriia@gmail.com",
                  "name": "Valeriia"
                },
                "createdAt": "2023-02-20T08:35:31.834Z",
                "updatedAt": "2023-02-20T08:35:31.834Z"
              }
            ]
          }
        }
      },
      "NoticeSchema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Pet's id",
            "example": "63f72058bbba3338d0016353"
          },
          "category": {
            "type": "string",
            "description": "Pet's category can be sell, lost-found, for-free",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notices title",
            "example": "Продаю кошеня"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Amaly"
          },
          "date": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "27.06.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "britanian"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex male, female",
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Київ, Україна"
          },
          "price": {
            "type": "integer",
            "description": "Pet's price",
            "example": "500"
          },
          "image": {
            "type": "string",
            "description": "Pet's photo",
            "example": "http://res.cloudinary.com/dtk7nhyzp/image/upload/h_150,w_100/nils%20cat.png"
          },
          "comments": {
            "type": "string",
            "description": "User's commet",
            "example": "good cat"
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "63f3306945cc47c53a8fd33d"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Valeriia"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Date of creation notice",
            "format": "dateTime"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of update notice",
            "format": "dateTime"
          }
        },
        "example": {
          "status": "success",
          "code": 201,
          "data": {
            "result": {
              "_id": "63f330d345cc47c53a8fd34e",
              "category": "sell",
              "title": "Продаю кошеня",
              "name": "Димок",
              "date": "15.06.2020",
              "breed": "Британський короткошерсний",
              "sex": "male",
              "location": "Київ, Україна",
              "price": 500,
              "image": "http://res.cloudinary.com/dtk7nhyzp/image/upload/v1676882130/muktgrmyiudgodkxzvgt.jpg",
              "comments": "Продаю кошеня породи британський короткошерсний. Дуже добрий та лагідний.",
              "owner": {
                "_id": "63f3306945cc47c53a8fd33d",
                "email": "valeriia@gmail.com",
                "name": "Valeriia"
              },
              "createdAt": "2023-02-20T08:35:31.834Z",
              "updatedAt": "2023-02-20T08:35:31.834Z"
            }
          }
        }
      },
      "NewNoticeRequest": {
        "type": "object",
        "required": [
          "category",
          "title",
          "sex",
          "location",
          "image",
          "comments"
        ],
        "properties": {
          "category": {
            "type": "string",
            "description": "Notices category can be sell, lost-found, for-free",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notices title",
            "example": "Продаю кошеня"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Amaly"
          },
          "date": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "27.06.2020"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "britanian"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex male, female",
            "example": "male"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Київ, Україна"
          },
          "price": {
            "type": "integer",
            "description": "Pet's price",
            "example": "500"
          },
          "image": {
            "type": "string",
            "description": "Pet's photo",
            "format": "binary"
          },
          "comments": {
            "type": "string",
            "description": "User's commet",
            "example": "good cat"
          }
        },
        "example": {
          "category": "sell",
          "title": "Продаю кошеня",
          "name": "Димок",
          "date": "15.06.2020",
          "breed": "Британський короткошерсний",
          "sex": "male",
          "location": "Київ, Україна",
          "price": 500,
          "image": "http://res.cloudinary.com/dtk7nhyzp/image/upload/v1676882130/muktgrmyiudgodkxzvgt.jpg",
          "comments": "Продаю кошеня породи британський короткошерсний. Дуже добрий та лагідний."
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
