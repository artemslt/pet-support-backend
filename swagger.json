{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Pet Support App",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "http://localhost:4000"
    },
    {
      "url": "https://pet-support-backend-v8vc.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    },
    {
      "name": "News",
      "description": "User endpoints"
    },
    {
      "name": "Friends",
      "description": "User endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Logout's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "post": {
        "tags": ["User"],
        "summary": "Current User",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/news": {
      "get": {
        "tags": ["News"],
        "summary": "News",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/friends": {
      "get": {
        "tags": ["Friends"],
        "summary": "Friends",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name", "location", "phone"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User's Name"
          },
          "location": {
            "type": "string",
            "description": "User's location",
            "example": "Kiyv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+38000000000"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },

          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User's Name"
          },

          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "63f14239b405b98cd800d117"
          }
        },
        "example": {
          "email": "1@gmail.com",
          "name": "1@gmail.com",
          "_id": "63f14239b405b98cd800d117"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "yJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZjE0MjM5YjQwNWI5OGNkODAwZDExNyIsImlhdCI6MTY3Njc1NTY3Nn0.YQx_yeavp4v"
          }
        }
      },
      "CurrentUserRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User's Name"
          },
          "verificationToken": {
            "type": "string",
            "description": "User's verificationToken",
            "example": "User's verificationToken"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User's Name"
          },
          "verificationToken": {
            "type": "string",
            "description": "User's verificationToken",
            "example": "User's verificationToken"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["_id"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "63f0a479972715d34654fdfa"
          }
        }
      },
      "NewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Friend's id",
              "example": "63f14239b405b98cd800d117"
            },
            "title": {
              "type": "string",
              "description": "User's id",
              "example": "Same Text"
            },
            "url": {
              "type": "string",
              "description": "User's id",
              "example": "Same url"
            },
            "description": {
              "type": "string",
              "description": "User's id",
              "example": "Same text"
            },
            "date": {
              "type": "string",
              "description": "User's id",
              "format": "date"
            }
          }
        }
      },
      "FriendsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Friend's id",
              "example": "63f14239b405b98cd800d117"
            },
            "title": {
              "type": "string",
              "description": "Friend's title",
              "example": "Same Text"
            },
            "url": {
              "type": "string",
              "description": "Friend's url",
              "example": "Same url"
            },
            "addressUrl": {
              "type": "string",
              "description": "Friend's addressUrl",
              "example": "Same url"
            },
            "imageUrl": {
              "type": "string",
              "description": "Friend's imageUrl",
              "example": "Same url"
            },
            "address": {
              "type": "string",
              "description": "Friend's address",
              "example": "Same address"
            },
            "workdays": {
              "type": "array",
              "description": "Friend's workdays",
              "items": {
                "type": "object",
                "properties": {
                  "isOpen": {
                    "type": "boolean",
                    "format": "boolean"
                  },
                  "from": {
                    "type": "string",
                    "example": "09:00"
                  },
                  "to": {
                    "type": "string",
                    "example": "17:00"
                  }
                }
              }
            },
            "email": {
              "type": "string",
              "description": "Friend's email",
              "format": "email"
            },
            "phone": {
              "type": "string",
              "description": "Friend's phone",
              "example": "Same phone"
            }
          }
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
}
